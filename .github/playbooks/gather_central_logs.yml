---

- hosts: all
  become: yes
  tasks:
    - name: Linux | Set required facts for logs gathering (1/2)
      ansible.builtin.set_fact:
        logs_prefix: "{{ ansible_facts.distribution }}_{{ ansible_facts.distribution_major_version }}_{{ ansible_facts.architecture }}_{{ inventory_hostname }}"

    - name: Linux | Set required facts for logs gathering (2/2)
      ansible.builtin.set_fact:
        remote_log_file_path: "/tmp/wazuh_logs_{{ logs_prefix }}_{{ ansible_date_time.epoch }}"

    - name: Remove existing Wazuh logs temporal directories
      ansible.builtin.file:
        path: "{{ remote_log_file_path }}"
        state: absent

    - name: Create temporal directories for Wazuh logs
      ansible.builtin.file:
        path: "{{ remote_log_file_path }}/{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - wazuh-indexer
        - wazuh-server
        - wazuh-dashboard
        - load-balancer

    - name: Wazuh Indexer
      when: inventory_hostname in ['aio'] or ('wi_cluster' in groups and inventory_hostname in groups['wi_cluster'])
      ignore_errors: yes
      block:
        - name: Wazuh Indexer | Fetching logs (1/2)
          ansible.builtin.shell: |
            journalctl -u wazuh-indexer > {{ remote_log_file_path }}/wazuh-indexer/{{ logs_prefix }}_journalctl.log

        - name: Wazuh Indexer | Fetching logs (2/2)
          ansible.builtin.shell: |
            if [ -d "/var/log/wazuh-indexer" ]; then
              for file in /var/log/wazuh-indexer/*; do
                if [ -f "$file" ]; then
                  cp "$file" "{{ remote_log_file_path }}/wazuh-indexer/{{ logs_prefix }}_$(basename "$file")"
                fi
              done
            fi

        - name: Wazuh Indexer | Fetching configuration
          ansible.builtin.copy:
            src: /etc/wazuh-indexer/opensearch.yml
            dest: "{{ remote_log_file_path }}/wazuh-indexer/{{ logs_prefix }}_opensearch.yml"
            remote_src: yes

    - name: Wazuh Server
      when: inventory_hostname in ['manager', 'worker', 'aio']
      ignore_errors: yes
      block:
        - name: Wazuh Server | Fetching logs
          ansible.builtin.shell: |
            journalctl -u wazuh-server > {{ remote_log_file_path }}/wazuh-server/{{ logs_prefix }}_journalctl.log

        - name: Wazuh Server | Fetching configuration
          ansible.builtin.copy:
            src: /etc/wazuh-server/wazuh-server.yml
            dest: "{{ remote_log_file_path }}/wazuh-server/{{ logs_prefix }}_wazuh-server.yml"
            remote_src: yes

    - name: Load Balancer
      when: inventory_hostname in ['balancer']
      ignore_errors: yes
      block:
        - name: Load Balancer | Fetching logs (1/2)
          ansible.builtin.shell: |
            journalctl -u nginx > {{ remote_log_file_path }}/load-balancer/{{ logs_prefix }}_journalctl.log

        - name: Load Balancer | Fetching logs (2/2)
          ansible.builtin.shell: |
            if [ -d "/var/log/nginx" ]; then
              for file in /var/log/nginx/*; do
                if [ -f "$file" ]; then
                  cp "$file" "{{ remote_log_file_path }}/load-balancer/{{ logs_prefix }}_$(basename "$file")"
                fi
              done
            fi

        - name: Load Balancer | Fetching configuration
          ansible.builtin.copy:
            src: /etc/nginx/nginx.conf
            dest: "{{ remote_log_file_path }}/load-balancer/{{ logs_prefix }}_nginx.conf"
            remote_src: yes

    - name: Wazuh Dashboard
      ignore_errors: yes
      when: inventory_hostname in ['dashboard'] or inventory_hostname in ['aio']
      block:
        - name: Wazuh Dashboard | Fetching logs
          ansible.builtin.shell: |
            journalctl -u wazuh-dashboard > {{ remote_log_file_path }}/wazuh-dashboard/{{ logs_prefix }}_journalctl.log

        - name: Wazuh Dashboard | Fetching configuration
          ansible.builtin.copy:
            src: /etc/wazuh-dashboard/opensearch_dashboards.yml
            dest: "{{ remote_log_file_path }}/wazuh-dashboard/{{ logs_prefix }}_opensearch_dashboards.yml"
            remote_src: yes

    - name: Compress Wazuh logs
      ansible.builtin.archive:
        path: "{{ remote_log_file_path }}/*"
        dest: "{{ remote_log_file_path }}/compressed_wazuh_logs_{{ logs_prefix }}.tar.gz"
        format: gz

    - name: Copy Wazuh logs to local machine
      ansible.builtin.fetch:
        src: "{{ remote_log_file_path }}/compressed_wazuh_logs_{{ logs_prefix }}.tar.gz"
        dest: "{{ local_log_file_path }}/"
        flat: yes

    - name: Remove Wazuh logs from remote machine
      ansible.builtin.file:
        path: "{{ remote_log_file_path }}"
        state: absent

    - name: Local actions
      delegate_to: localhost
      block:
        - name: Create central_logs_organized directory on local machine
          ansible.builtin.file:
            path: "{{ local_log_file_path }}/central_logs_organized"
            state: directory
            mode: '0755'

        - name: Unpack Wazuh logs into central_logs_organized directory
          ansible.builtin.unarchive:
            src: "{{ local_log_file_path }}/compressed_wazuh_logs_{{ logs_prefix }}.tar.gz"
            dest: "{{ local_log_file_path }}/central_logs_organized"
            remote_src: false
